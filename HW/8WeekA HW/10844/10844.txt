쉬운 계단 문제다.
45656이란 수를 보자.
이 수는 인접한 모든 자리의 차이가 1이다. 이런 수를 계단 수라고 한다.
N이 주어질 때, 길이가 N인 계단 수가 총 몇 개 있는지 구해보자. 0으로 시작하는 수는 계단수가 아니다.


이 문제를 푸는 방법
2차원 배열에서 i[몇 번째 수][자릿수] = 총 개수다.

이때 바르 옆 숫자가 1씩 다를때 왼족부터 n 번째 자릴수는 n -1 번째 자릴수
값 + 1 과 n - 1 번째 자리수 값 -1의 개수에서 오기 때문에 둘을 더한다.


의사코드 구햔

for (int i = 0; i < 10; i++)
    floor[1][i] = 1;
for(int i = 2; i <= s; i++){
    for(int j = 0; j < 10; j++){
        if( j == 0)
            floor[i][0] = floor[i - 1][1] %num;
        else if (j == 9)
            floor[i][9] = floor[i - 1][8] %num;
        else 
            floor[i][j] = (floor[i - 1][j - 1] + floor[i - 1][j + 1]% num);
        
    }



코드 구현 
#include<stdio.h>
#define num 1000000000


int main(void){
int s ,sum = 0, floor[101][10] = {0,};

scanf("%d", &s);

for (int i = 0; i < 10; i++)
    floor[1][i] = 1;
for(int i = 2; i <= s; i++){
    for(int j = 0; j < 10; j++){
        if( j == 0)
            floor[i][0] = floor[i - 1][1] %num;
        else if (j == 9)
            floor[i][9] = floor[i - 1][8] %num;
        else 
            floor[i][j] = (floor[i - 1][j - 1] + floor[i - 1][j + 1]% num);
        
    }
}
for(int i = 1; i < 10; i ++)
    sum = (sum + floor[s][i] % num);

printf("%d",sum % num);

}